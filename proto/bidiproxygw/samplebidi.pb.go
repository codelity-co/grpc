// Code generated by protoc-gen-go. DO NOT EDIT.
// source: samplebidi.proto

package bidiproxygw

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Payload struct {
	Timestamp1           int64    `protobuf:"varint,1,opt,name=timestamp1,proto3" json:"timestamp1,omitempty"`
	Timestamp2           int64    `protobuf:"varint,2,opt,name=timestamp2,proto3" json:"timestamp2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_samplebidi_1f5c7d5c3256ed53, []int{0}
}
func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (dst *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(dst, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetTimestamp1() int64 {
	if m != nil {
		return m.Timestamp1
	}
	return 0
}

func (m *Payload) GetTimestamp2() int64 {
	if m != nil {
		return m.Timestamp2
	}
	return 0
}

func init() {
	proto.RegisterType((*Payload)(nil), "bidiproxygw.Payload")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SampleServiceBidiClient is the client API for SampleServiceBidi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SampleServiceBidiClient interface {
	BidiStreaming(ctx context.Context, opts ...grpc.CallOption) (SampleServiceBidi_BidiStreamingClient, error)
}

type sampleServiceBidiClient struct {
	cc *grpc.ClientConn
}

func NewSampleServiceBidiClient(cc *grpc.ClientConn) SampleServiceBidiClient {
	return &sampleServiceBidiClient{cc}
}

func (c *sampleServiceBidiClient) BidiStreaming(ctx context.Context, opts ...grpc.CallOption) (SampleServiceBidi_BidiStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SampleServiceBidi_serviceDesc.Streams[0], "/bidiproxygw.SampleServiceBidi/BidiStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &sampleServiceBidiBidiStreamingClient{stream}
	return x, nil
}

type SampleServiceBidi_BidiStreamingClient interface {
	Send(*Payload) error
	Recv() (*Payload, error)
	grpc.ClientStream
}

type sampleServiceBidiBidiStreamingClient struct {
	grpc.ClientStream
}

func (x *sampleServiceBidiBidiStreamingClient) Send(m *Payload) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sampleServiceBidiBidiStreamingClient) Recv() (*Payload, error) {
	m := new(Payload)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SampleServiceBidiServer is the server API for SampleServiceBidi service.
type SampleServiceBidiServer interface {
	BidiStreaming(SampleServiceBidi_BidiStreamingServer) error
}

func RegisterSampleServiceBidiServer(s *grpc.Server, srv SampleServiceBidiServer) {
	s.RegisterService(&_SampleServiceBidi_serviceDesc, srv)
}

func _SampleServiceBidi_BidiStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SampleServiceBidiServer).BidiStreaming(&sampleServiceBidiBidiStreamingServer{stream})
}

type SampleServiceBidi_BidiStreamingServer interface {
	Send(*Payload) error
	Recv() (*Payload, error)
	grpc.ServerStream
}

type sampleServiceBidiBidiStreamingServer struct {
	grpc.ServerStream
}

func (x *sampleServiceBidiBidiStreamingServer) Send(m *Payload) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sampleServiceBidiBidiStreamingServer) Recv() (*Payload, error) {
	m := new(Payload)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SampleServiceBidi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bidiproxygw.SampleServiceBidi",
	HandlerType: (*SampleServiceBidiServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BidiStreaming",
			Handler:       _SampleServiceBidi_BidiStreaming_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "samplebidi.proto",
}

func init() { proto.RegisterFile("samplebidi.proto", fileDescriptor_samplebidi_1f5c7d5c3256ed53) }

var fileDescriptor_samplebidi_1f5c7d5c3256ed53 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x4e, 0xcc, 0x2d,
	0xc8, 0x49, 0x4d, 0xca, 0x4c, 0xc9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x06, 0xb1,
	0x0b, 0x8a, 0xf2, 0x2b, 0x2a, 0xd3, 0xcb, 0x95, 0x3c, 0xb9, 0xd8, 0x03, 0x12, 0x2b, 0x73, 0xf2,
	0x13, 0x53, 0x84, 0xe4, 0xb8, 0xb8, 0x4a, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x0c,
	0x25, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0x90, 0x44, 0x50, 0xe4, 0x8d, 0x24, 0x98, 0xd0, 0xe4,
	0x8d, 0x8c, 0x42, 0xb8, 0x04, 0x83, 0xc1, 0x76, 0x05, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x3a,
	0x65, 0xa6, 0x64, 0x0a, 0xd9, 0x73, 0xf1, 0x82, 0xe8, 0xe0, 0x92, 0xa2, 0xd4, 0xc4, 0xdc, 0xcc,
	0xbc, 0x74, 0x21, 0x11, 0x3d, 0x24, 0xeb, 0xf5, 0xa0, 0x76, 0x4b, 0x61, 0x15, 0xd5, 0x60, 0x34,
	0x60, 0x4c, 0x62, 0x03, 0x3b, 0xda, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xee, 0xab, 0xc0, 0x4f,
	0xc8, 0x00, 0x00, 0x00,
}
